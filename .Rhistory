st_as_sf(coords = c("LONG", "LAT"), crs = 4326)
ggplot(geo_levantamento_socioambiental_limpo) +
geom_sf(aes(color = cluster))
geo_levantamento_socioambiental_limpo <- levantamento_socioambiental_limpo %>%
st_as_sf(coords = c("LONG", "LAT"), crs = 4326)
ggplot(geo_levantamento_socioambiental_limpo) +
geom_sf()
colnames(geo_levantamento_socioambiental_limpo)
geo_levantamento_socioambiental_limpo$"LOTE"
geo_levantamento_socioambiental_limpo_filtro <- geo_levantamento_socioambiental_limpo %>%
filter(LOTE == "GO*")
geo_levantamento_socioambiental_limpo_filtro
geo_levantamento_socioambiental_limpo$"LOTE"
geo_levantamento_socioambiental_limpo_filtro
geo_levantamento_socioambiental_limpo_filtro <- geo_levantamento_socioambiental_limpo %>%
filter(LOTE == "GO%")
geo_levantamento_socioambiental_limpo_filtro
geo_levantamento_socioambiental_limpo_filtro <- geo_levantamento_socioambiental_limpo %>%
filter(LOTE == "GO")
geo_levantamento_socioambiental_limpo_filtro
geo_levantamento_socioambiental_limpo_filtro <- geo_levantamento_socioambiental_limpo %>%
filter(!grepl("GO*",LOTE))
geo_levantamento_socioambiental_limpo_filtro
geo_levantamento_socioambiental_limpo_filtro <- geo_levantamento_socioambiental_limpo %>%
filter(grepl("GO*",LOTE))
geo_levantamento_socioambiental_limpo_filtro
geo_levantamento_socioambiental_limpo_filtro_go <- geo_levantamento_socioambiental_limpo %>%
filter(grepl("GO*",LOTE))
geo_levantamento_socioambiental_limpo_filtro
geo_levantamento_socioambiental_limpo_filtro_go <- geo_levantamento_socioambiental_limpo %>%
filter(grepl("GO*",LOTE))
geo_levantamento_socioambiental_limpo_filtro_go
ggplot() +
geom_sf(geo_levantamento_socioambiental_limpo_filtro_go) +
theme_minimal()
geo_levantamento_socioambiental_limpo_filtro_go |>
ggplot() +
geom_sf() +
theme_minimal()
st_write(geo_levantamento_socioambiental_limpo_filtro_go, "geo_levantamento_socioambiental_limpo_filtro_go.shp")
geo_levantamento_socioambiental_limpo_filtro_go <- geo_levantamento_socioambiental_limpo %>%
filter(grepl("GO*",LOTE))
geo_levantamento_socioambiental_limpo_filtro_go
geo_levantamento_socioambiental_limpo_filtro_go <- geo_levantamento_socioambiental_limpo %>%
filter(grepl("GO*",LOTE))
geo_levantamento_socioambiental_limpo_filtro_go
geo_levantamento_socioambiental_limpo_filtro_go <- geo_levantamento_socioambiental_limpo %>%
filter(grepl("GO|DF",LOTE))
geo_levantamento_socioambiental_limpo_filtro_go
geo_levantamento_socioambiental_limpo_filtro_go |>
ggplot() +
geom_sf() +
theme_minimal()
st_write(geo_levantamento_socioambiental_limpo_filtro_go, "geo_levantamento_socioambiental_limpo_filtro_go.shp")
st_write(geo_levantamento_socioambiental_limpo_filtro_go, "geo_levantamento_socioambiental_limpo_filtro_go.shp")
st_write(geo_levantamento_socioambiental_limpo_filtro_go, "geo_levantamento_socioambiental_limpo_filtro_go.shp", delete_dsn = TRUE)
st_write(geo_levantamento_socioambiental_limpo_filtro_go, "geo_levantamento_socioambiental_limpo_filtro_go.shp", delete_dsn = TRUE)
st_write(geo_levantamento_socioambiental_limpo_filtro_go, "geo_levantamento_socioambiental_limpo_filtro_go.shp", delete_dsn = TRUE)
unique(geo_levantamento_socioambiental_limpo_filtro_go$LOTE)
unique(geo_levantamento_socioambiental_limpo_filtro_go$PARTE_UTI)
View(levantamento_biofisio)
tab_soc <- levantamento_socioambiental[!is.na(levantamento_socioambiental$LONG) & !is.na(levantamento_socioambiental$LAT),]
tab_bio <- levantamento_biofisio[!is.na(levantamento_biofisio$Long) & !is.na(levantamento_biofisio$Lat),]
geo_soc <- tab_soc %>%
st_as_sf(coords = c("LONG", "LAT"), crs = 4326)
geo_soc <- tab_bio %>%
st_as_sf(coords = c("Long", "Lat"), crs = 4326)
ggplot(geo_soc) +
geom_sf() +
theme_minimal()
ggplot(geo_soc) +
geom_sf() +
theme_minimal()
tab_bio
dim(tab_bio)
dim(levantamento_biofisio)
# PRE-SETS ----
rm(list=ls()) # limpa  o ambiente
# PACOTES
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, # pacote para manipulação de dados
utils, # pacote base
downloader, # pacote para download de arquivos
sf #pacote para manipulação de dados espaciais
)
#pasta=paste0("Saidas-Exercicios-", Sys.Date()) #cria uma pasta para as saídas do dia
#if(!dir.exists(pasta)) dir.create(pasta) #cria uma pasta para as saídas do dia
gc()
gc()
# PRE-SETS ----
rm(list=ls()) # limpa  o ambiente
# PACOTES
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, # pacote para manipulação de dados
utils, # pacote base
downloader, # pacote para download de arquivos
sf #pacote para manipulação de dados espaciais
)
#pasta=paste0("Saidas-Exercicios-", Sys.Date()) #cria uma pasta para as saídas do dia
#if(!dir.exists(pasta)) dir.create(pasta) #cria uma pasta para as saídas do dia
download_e_leitura_csv <- function (url, dir, file ) {
tempFile <- tempfile()
tempDir <- tempdir()
download(url, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, dir, file)
csv <- read_csv2(caminho_dados, locale = locale(encoding = "ISO-8859-1"))
}
url_socio <- "https://snif.florestal.gov.br/images/dados_abertos/IFN_Bioma_Cerrado_LSA_B3_S2_v1.zip"
url_bio <- "https://snif.florestal.gov.br/images/dados_abertos/IFN_Bioma_Cerrado_Biofisico_F6_v1.zip"
levantamento_socioambiental <- download_e_leitura_csv(url_socio, "IFN_Bioma_Cerrado_LSA_B3_S2_v1.1", "dados IFN-LSA Cerrado plantas mais utilizadas.csv")
levantamento_biofisio <- download_e_leitura_csv(url_bio, "IFN_Bioma_Cerrado_Biofisico_F6_v1.1", "dados IFN- Bioma Cerrado Biofisico F6 v.1.1.csv")
tab_soc <- levantamento_socioambiental[!is.na(levantamento_socioambiental$LONG) & !is.na(levantamento_socioambiental$LAT),]
tab_bio <- levantamento_biofisio[!is.na(levantamento_biofisio$Long) & !is.na(levantamento_biofisio$Lat),]
geo_soc <- tab_soc %>%
st_as_sf(coords = c("LONG", "LAT"), crs = 4326)
ggplot(geo_soc) +
geom_sf() +
theme_minimal()
geo_bio <- tab_bio %>%
st_as_sf(coords = c("Long", "Lat"), crs = 4326)
ggplot(geo_bio) +
geom_sf() +
theme_minimal()
print(dim(geo_soc_DFGO))
dim(geo_soc_DFGO)
geo_soc_DFGO <- geo_soc %>%
filter(grepl("GO|DF",LOTE))
geo_bio_DFGO <- geo_bio %>%
filter(grepl("GO|DF",LOTE))
print(dim(geo_soc_DFGO))
print(dim(geo_bio_DFGO))
colnames(geo_bio_DFGO)
View(geo_bio_DFGO)
View(geo_soc_DFGO)
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
tempDir <- tempdir()
download(url_taxon, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, "taxon.txt")
txt <- read_csv2(caminho_dados, locale = locale(encoding = "ISO-8859-1"))
caminho_dados <- file.path(tempDir, "taxon.txt")
caminho_dados
txt <- read_table(caminho_dados)
list.files("C:/Users/ROGERI~1.SIQ/AppData/Local/Temp/Rtmp8c4zvj/")
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
tempDir <- tempdir()
download(url_taxon, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
unzip(zipfile = tempFile, list = TRUE)
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
tempDir <- tempdir()
download(url_taxon, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, "taxon.txt")
txt <- read_table(caminho_dados)
tempDir
caminho_dados <- file.path(tempDir,"dwca-lista_especies_flora_brasil-v393.403", "taxon.txt")
txt <- read_table(caminho_dados)
list.files("C:/Users/ROGERI~1.SIQ/AppData/Local/Temp/Rtmp8c4zvj/")
caminho_dados <- file.path(tempDir, "taxon.txt")
txt <- read_table(caminho_dados)
tempFile
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempFile, "taxon.txt")
txt <- read_table(caminho_dados)
caminho_dados <- file.path(tempDir, "taxon.txt")
txt <- read_table(caminho_dados)
txt <- read_delim(caminho_dados)
txt <- read_delim2(caminho_dados)
# PRE-SETS ----
rm(list=ls()) # limpa  o ambiente
# PACOTES
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, # pacote para manipulação de dados
utils, # pacote base
downloader, # pacote para download de arquivos
sf #pacote para manipulação de dados espaciais
)
#pasta=paste0("Saidas-Exercicios-", Sys.Date()) #cria uma pasta para as saídas do dia
#if(!dir.exists(pasta)) dir.create(pasta) #cria uma pasta para as saídas do dia
gc()
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
tempDir <- tempdir()
download(url_taxon, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, "taxon.txt")
txt <- read_delim(caminho_dados)
txt <- read_delim(caminho_dados, delim = "\t", locale = locale(encoding = "ISO-8859-1"))
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
tempDir <- tempdir()
download(url_taxon, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
arquivos_txt <- list.files(tempDir, pattern = "\\.txt$", full.names = TRUE)
arquivo_especifico <- arquivos_txt[1] # Substitua o índice [1] pelo índice do arquivo desejado
df <- read_delim(arquivo_especifico, delim = "\t") # Ajuste o delimitador conforme necessário
arquivos_txt
arquivo_especifico
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
tempDir <- tempdir()
download(url_taxon, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
arquivos_txt <- list.files(tempDir, pattern = "\\.txt$", full.names = TRUE)
if (length(arquivos_txt) == 0) {
stop("Nenhum arquivo .txt foi encontrado no diretório especificado.")
} else {
# Prossiga com a leitura do arquivo e outras operações
arquivo_especifico <- arquivos_txt[1] # ou o índice do arquivo desejado
df <- read_delim(arquivo_especifico, delim = "\t") # Ajuste o delimitador conforme necessário
}
unzip(zipfile = tempFile, exdir = tempDir)
tempDir
list.files(tempDir)
list.files(tempDir, pattern = "\\.txt$", full.names = TRUE)
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
# Crie ou obtenha o caminho do diretório temporário da sessão atual do R
pasta_temporaria <- tempdir()
# Descompacte o arquivo .zip na pasta temporária
unzip(zipfile = tempFile, exdir = pasta_temporaria)
# Agora você pode listar os arquivos na pasta temporária e ler o arquivo .txt desejado
arquivos_txt <- list.files(pasta_temporaria, pattern = "\\.txt$", full.names = TRUE)
arquivo_especifico <- arquivos_txt[1] # Substitua pelo índice do arquivo desejado
df <- read_delim(arquivo_especifico, delim = "\t") # Ajuste o delimitador conforme necessário
arquivo_especifico
arquivos_txt
pasta_temporaria
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
tempDir <- tempdir()
download.file(url_taxon, destfile = tempFile)
# unzip(zipfile = tempFile, exdir = tempDir)
# caminho_dados <- file.path(tempDir, "taxon.txt")
# txt <- read_delim(caminho_dados, delim = "\t", locale = locale(encoding = "ISO-8859-1"))
data <- read_delim(unz(tempFile, "taxon.txt"), delim = "\t", locale = locale(encoding = "ISO-8859-1"))
unlink(tempFile)
unlink(tempDir)
download_e_leitura_csv <- function (url, dir, file ) {
tempFile <- tempfile()
tempDir <- tempdir()
download(url, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, dir, file)
csv <- read_csv2(caminho_dados, locale = locale(encoding = "ISO-8859-1"))
unlink(tempFile)
unlink(tempDir)
}
download_e_leitura_txt <- function (url, dir, file ) {
tempFile <- tempfile()
tempDir <- tempdir()
download(url, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, dir, file)
csv <- read_csv2(caminho_dados, locale = locale(encoding = "ISO-8859-1"))
}
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
tempDir <- tempdir()
download(url_taxon, destfile = tempFile)
# unzip(zipfile = tempFile, exdir = tempDir)
# caminho_dados <- file.path(tempDir, "taxon.txt")
# txt <- read_delim(caminho_dados, delim = "\t", locale = locale(encoding = "ISO-8859-1"))
data <- read_delim(unz(tempFile, "taxon.txt"), delim = "\t", locale = locale(encoding = "ISO-8859-1"))
unlink(tempFile)
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
tempDir <- tempdir()
download(url_taxon, destfile = tempFile)
unzip(zipfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
# PRE-SETS ----
rm(list=ls()) # limpa  o ambiente
# PACOTES
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, # pacote para manipulação de dados
utils, # pacote base
downloader, # pacote para download de arquivos
sf #pacote para manipulação de dados espaciais
)
#pasta=paste0("Saidas-Exercicios-", Sys.Date()) #cria uma pasta para as saídas do dia
#if(!dir.exists(pasta)) dir.create(pasta) #cria uma pasta para as saídas do dia
download_e_leitura_csv <- function (url, dir, file ) {
tempFile <- tempfile()
tempDir <- tempdir()
download(url, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, dir, file)
csv <- read_csv2(caminho_dados, locale = locale(encoding = "ISO-8859-1"))
unlink(tempFile)
unlink(tempDir)
}
download_e_leitura_txt <- function (url, dir, file ) {
tempFile <- tempfile()
tempDir <- tempdir()
download(url, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, dir, file)
csv <- read_csv2(caminho_dados, locale = locale(encoding = "ISO-8859-1"))
}
url_socio <- "https://snif.florestal.gov.br/images/dados_abertos/IFN_Bioma_Cerrado_LSA_B3_S2_v1.zip"
url_bio <- "https://snif.florestal.gov.br/images/dados_abertos/IFN_Bioma_Cerrado_Biofisico_F6_v1.zip"
levantamento_socioambiental <- download_e_leitura_csv(url_socio, "IFN_Bioma_Cerrado_LSA_B3_S2_v1.1", "dados IFN-LSA Cerrado plantas mais utilizadas.csv")
levantamento_biofisio <- download_e_leitura_csv(url_bio, "IFN_Bioma_Cerrado_Biofisico_F6_v1.1", "dados IFN- Bioma Cerrado Biofisico F6 v.1.1.csv")
tab_soc <- levantamento_socioambiental[!is.na(levantamento_socioambiental$LONG) & !is.na(levantamento_socioambiental$LAT),]
tab_bio <- levantamento_biofisio[!is.na(levantamento_biofisio$Long) & !is.na(levantamento_biofisio$Lat),]
url_socio <- "https://snif.florestal.gov.br/images/dados_abertos/IFN_Bioma_Cerrado_LSA_B3_S2_v1.zip"
url_bio <- "https://snif.florestal.gov.br/images/dados_abertos/IFN_Bioma_Cerrado_Biofisico_F6_v1.zip"
levantamento_socioambiental <- download_e_leitura_csv(url_socio, "IFN_Bioma_Cerrado_LSA_B3_S2_v1.1", "dados IFN-LSA Cerrado plantas mais utilizadas.csv")
levantamento_biofisio <- download_e_leitura_csv(url_bio, "IFN_Bioma_Cerrado_Biofisico_F6_v1.1", "dados IFN- Bioma Cerrado Biofisico F6 v.1.1.csv")
tab_soc <- levantamento_socioambiental[!is.na(levantamento_socioambiental$LONG) & !is.na(levantamento_socioambiental$LAT),]
download_e_leitura_csv <- function (url, dir, file ) {
tempFile <- tempfile()
tempDir <- tempdir()
download(url, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, dir, file)
csv <- read_csv2(caminho_dados, locale = locale(encoding = "ISO-8859-1"))
# unlink(tempFile)
# unlink(tempDir)
}
download_e_leitura_txt <- function (url, dir, file ) {
tempFile <- tempfile()
tempDir <- tempdir()
download(url, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, dir, file)
csv <- read_csv2(caminho_dados, locale = locale(encoding = "ISO-8859-1"))
}
url_socio <- "https://snif.florestal.gov.br/images/dados_abertos/IFN_Bioma_Cerrado_LSA_B3_S2_v1.zip"
url_bio <- "https://snif.florestal.gov.br/images/dados_abertos/IFN_Bioma_Cerrado_Biofisico_F6_v1.zip"
levantamento_socioambiental <- download_e_leitura_csv(url_socio, "IFN_Bioma_Cerrado_LSA_B3_S2_v1.1", "dados IFN-LSA Cerrado plantas mais utilizadas.csv")
levantamento_biofisio <- download_e_leitura_csv(url_bio, "IFN_Bioma_Cerrado_Biofisico_F6_v1.1", "dados IFN- Bioma Cerrado Biofisico F6 v.1.1.csv")
tab_soc <- levantamento_socioambiental[!is.na(levantamento_socioambiental$LONG) & !is.na(levantamento_socioambiental$LAT),]
tab_bio <- levantamento_biofisio[!is.na(levantamento_biofisio$Long) & !is.na(levantamento_biofisio$Lat),]
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile(fileext = ".zip")
tempDir <- tempdir()
download(url_taxon, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
download(url, destfile = tempFile, mode = "wb")
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile(fileext = ".zip")
tempDir <- tempdir()
download(url, destfile = tempFile, mode = "wb")
download(url, destfile = tempFile)
tempFile
download(url, destfile = tempFile)
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
tempDir <- tempdir()
download(url, destfile = tempFile)
url_taxon <- "https://ipt.jbrj.gov.br/jbrj/archive.do?r=lista_especies_flora_brasil&v=393.403"
tempFile <- tempfile()
tempDir <- tempdir()
download(url_taxon, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
tempFile <- tempfile(fileext = ".zip")
tempDir <- tempdir()
download(url_taxon, destfile = tempFile, mode = "wb")
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, "taxon.txt")
caminho_dados
data <- read_delim(caminho_dados, delim = "\t", locale = locale(encoding = "ISO-8859-1"))
View(data)
data <- read_delim(caminho_dados, delim = "\t", locale = locale(encoding = "UTF-8"))
View(data)
download_e_leitura_csv <- function (url, dir, file ) {
tempFile <- tempfile()
tempDir <- tempdir()
download(url, destfile = tempFile)
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, dir, file)
csv <- read_csv2(caminho_dados, locale = locale(encoding = "ISO-8859-1"))
# unlink(tempFile)
# unlink(tempDir)
}
download_e_leitura_txt <- function (url, file ) {
tempFile <- tempfile(fileext = ".zip")
tempDir <- tempdir()
download(url_taxon, destfile = tempFile, mode = "wb")
unzip(zipfile = tempFile, exdir = tempDir)
caminho_dados <- file.path(tempDir, file)
df <- read_delim(caminho_dados, delim = "\t", locale = locale(encoding = "UTF-8"))
}
# PRE-SETS ----
rm(list=ls()) # limpa  o ambiente
# PACOTES
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, # pacote para manipulação de dados
utils, # pacote base
downloader, # pacote para download de arquivos
sf #pacote para manipulação de dados espaciais
)
#pasta=paste0("Saidas-Exercicios-", Sys.Date()) #cria uma pasta para as saídas do dia
#if(!dir.exists(pasta)) dir.create(pasta) #cria uma pasta para as saídas do dia
gc()
gc()
pacman::p_load(tidyverse, readxl)
# Load the data
cnefe_df <- read_csv("C:\Users\rogerio.siqueira\Downloads\5300108_BRASILIA\5300108_BRASILIA.csv")
# Load the data
cnefe_df <- read_csv("C:/Users/rogerio.siqueira/Downloads/5300108_BRASILIA/5300108_BRASILIA.csv")
# Load the data
cnefe_df <- read_csv("C:/Users/rogerio.siqueira/Downloads/5300108_BRASILIA/5300108_BRASILIA.csv")
# Load the data
cnefe_df <- read_csv2("C:/Users/rogerio.siqueira/Downloads/5300108_BRASILIA/5300108_BRASILIA.csv")
# Load the data
cnefe_df <- read_csv("C:/Users/rogerio.siqueira/Downloads/5300108_BRASILIA/5300108_BRASILIA.csv")
View(especie_socio_ride)
especie_socio_ride <- tab_socio_ride %>% # Tabela Sociológica do IFN
filter(!`NOME DESCRITO NO LSA` == 'Sem informação') %>% # Filtrar somente os valores únicos
group_by(name_muni, `NOME DESCRITO NO LSA`) %>% # Agrupar por município e espécie
summarise(Quantidade = n()) %>% # Contar a quantidade de espécies
arrange(desc(name_muni), desc(Quantidade)) %>% # Ordenar de forma decrescente pela quantidade
group_by(name_muni) %>% # Reagrupar por município
top_n(5, Quantidade) %>% # Selecionar os 5 maiores valores de cada municípi
select(-geometry)
especie_socio_ride <- tab_socio_ride %>% # Tabela Sociológica do IFN
filter(!`NOME DESCRITO NO LSA` == 'Sem informação') %>% # Filtrar somente os valores únicos
group_by(name_muni, `NOME DESCRITO NO LSA`) %>% # Agrupar por município e espécie
summarise(Quantidade = n()) %>% # Contar a quantidade de espécies
arrange(desc(name_muni), desc(Quantidade)) %>% # Ordenar de forma decrescente pela quantidade
group_by(name_muni) %>% # Reagrupar por município
top_n(5, Quantidade) %>% # Selecionar os 5 maiores valores de cada municípi
select(-geometry)
especie_socio_ride <- tab_socio_ride %>% # Tabela Sociológica do IFN
filter(!`NOME DESCRITO NO LSA` == 'Sem informação') %>% # Filtrar somente os valores únicos
group_by(name_muni, `NOME DESCRITO NO LSA`) %>% # Agrupar por município e espécie
summarise(Quantidade = n()) %>% # Contar a quantidade de espécies
arrange(desc(name_muni), desc(Quantidade)) %>% # Ordenar de forma decrescente pela quantidade
group_by(name_muni) %>% # Reagrupar por município
top_n(5, Quantidade) %>% # Selecionar os 5 maiores valores de cada municípi
select(-geometry)
especie_socio_ride <- tab_socio_ride %>% # Tabela Sociológica do IFN
select(-geometry) %>% # Remover a coluna de geometria
filter(!`NOME DESCRITO NO LSA` == 'Sem informação') %>% # Filtrar somente os valores únicos
group_by(name_muni, `NOME DESCRITO NO LSA`) %>% # Agrupar por município e espécie
summarise(Quantidade = n()) %>% # Contar a quantidade de espécies
arrange(desc(name_muni), desc(Quantidade)) %>% # Ordenar de forma decrescente pela quantidade
group_by(name_muni) %>% # Reagrupar por município
top_n(5, Quantidade) # Selecionar os 5 maiores valores de cada municípi
especie_socio_ride <- tab_socio_ride %>% # Tabela Sociológica do IFN
select(-geometry) %>% # Remover a coluna de geometria
filter(!`NOME DESCRITO NO LSA` == 'Sem informação') %>% # Filtrar somente os valores únicos
group_by(name_muni, `NOME DESCRITO NO LSA`) %>% # Agrupar por município e espécie
summarise(Quantidade = n()) %>% # Contar a quantidade de espécies
arrange(desc(name_muni), desc(Quantidade)) %>% # Ordenar de forma decrescente pela quantidade
group_by(name_muni) %>% # Reagrupar por município
top_n(5, Quantidade) # Selecionar os 5 maiores valores de cada municípi
pacman::p_load(tidyverse, # pacote para manipulação de dados
utils, # pacote base
downloader, # pacote para download de arquivos
sf, #pacote para manipulação de dados espaciais
geobr # pacote para baixar shapefiles do Brasil
)
especie_socio_ride <- tab_socio_ride %>% # Tabela Sociológica do IFN
filter(!`NOME DESCRITO NO LSA` == 'Sem informação') %>% # Filtrar somente os valores únicos
group_by(name_muni, `NOME DESCRITO NO LSA`) %>% # Agrupar por município e espécie
summarise(Quantidade = n()) %>% # Contar a quantidade de espécies
arrange(desc(name_muni), desc(Quantidade)) %>% # Ordenar de forma decrescente pela quantidade
group_by(name_muni) %>% # Reagrupar por município
top_n(5, Quantidade) %>% # Selecionar os 5 maiores valores de cada municípi
select(-geometry)
View(especie_socio_ride)
View(especie_socio_ride)
especie_socio_ride <- tab_socio_ride %>% # Tabela Sociológica do IFN
select(-geometry) %>% # Remover a coluna de geometria
filter(!`NOME DESCRITO NO LSA` == 'Sem informação') %>% # Filtrar somente os valores únicos
group_by(name_muni, `NOME DESCRITO NO LSA`) %>% # Agrupar por município e espécie
summarise(Quantidade = n()) %>% # Contar a quantidade de espécies
arrange(desc(name_muni), desc(Quantidade)) %>% # Ordenar de forma decrescente pela quantidade
group_by(name_muni) %>% # Reagrupar por município
top_n(5, Quantidade) # Selecionar os 5 maiores valores de cada municípi
View(especie_socio_ride)
rm(especie_socio_ride)
especie_socio_ride <- tab_socio_ride %>% # Tabela Sociológica do IFN
select(-geometry) %>% # Remover a coluna de geometria
filter(!`NOME DESCRITO NO LSA` == 'Sem informação') %>% # Filtrar somente os valores únicos
group_by(name_muni, `NOME DESCRITO NO LSA`) %>% # Agrupar por município e espécie
summarise(Quantidade = n()) %>% # Contar a quantidade de espécies
arrange(desc(name_muni), desc(Quantidade)) %>% # Ordenar de forma decrescente pela quantidade
group_by(name_muni) %>% # Reagrupar por município
top_n(5, Quantidade) # Selecionar os 5 maiores valores de cada municípi
View(especie_socio_ride)
# Espacializar
ggplot(especie_socio_ride) +
geom_sf() +
theme_minimal()
View(especie_socio_ride)
select(especie_socio_ride, -geometry)
teste < select(especie_socio_ride, -geometry)
teste <- select(especie_socio_ride, -geometry)
View(teste)
View(especie_socio_ride)
especie_socio_ride <- tab_socio_ride %>% # Tabela Sociológica do IFN
filter(!`NOME DESCRITO NO LSA` == 'Sem informação') %>% # Filtrar somente os valores únicos
group_by(name_muni, `NOME DESCRITO NO LSA`) %>% # Agrupar por município e espécie
summarise(Quantidade = n()) %>% # Contar a quantidade de espécies
arrange(desc(name_muni), desc(Quantidade)) %>% # Ordenar de forma decrescente pela quantidade
group_by(name_muni) %>% # Reagrupar por município
top_n(5, Quantidade) # Selecionar os 5 maiores valores de cada municípi
View(especie_socio_ride)
len(61992322312)
length(61992322312)
length('61992322312')
nchar("61992322312")
